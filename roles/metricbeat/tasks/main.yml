---
########################################################
# Set up Metricbeat 
########################################################

- name: Install metribeat
  yum: 
    name: metricbeat-{{ elasticsearch_version }} 
    state: latest 
    update_cache: yes

- name: Create metricbeat config
  template:
    src: metricbeat.config.j2
    dest: /etc/metricbeat/metricbeat.yml
    backup: yes

- name: Deploy system module config
  template:
    src: metricbeat.modules.system.j2
    dest: /etc/metricbeat/modules.d/system.yml
    backup: yes

- name: Deploy elasticsearch xpack module config
  template:
    src: metricbeat.xpack.j2
    dest: /etc/metricbeat/modules.d/elasticsearch-xpack.yml.disabled
    backup: yes

- name: enable module xpack
  command: /usr/bin/metricbeat modules enable elasticsearch-xpack

# Check for CA key existence (so we don't getnerate a new onw on every run)
- name: "Check if /etc/metricbeat/certs/{{ ansible_hostname }}.key already exists"
  stat: path="/etc/metricbeat/certs/{{ ansible_hostname }}.key"
  register: __key_file

- block:
    - name: Create certificate directory
      file:
        state: directory
        path: /etc/metricbeat/certs
        owner: root
        group: root
        mode: 0755

    - name: Copy the CA certificate and CA provate key  from ansible to remote node
      copy:
        src: '/etc/pki/CA/{{ item.src }}'
        dest: '/etc/metricbeat/certs/{{ item.dst }}'
        backup: no
      with_items:
        - { src: 'private/rootCA.key', dst: 'rootCA.key' }
        - { src: 'certs/rootCA.crt', dst: 'rootCA.crt' }

    - name: "Generate the client private key file"
      openssl_privatekey:
        path: "/etc/metricbeat/certs/{{ ansible_hostname }}.key"
        mode: "0644"

    - name: "Generate the CSR file signed with the private key"
      openssl_csr:
        path: "/etc/metricbeat/certs/{{ ansible_hostname }}.csr"
        privatekey_path: "/etc/metricbeat/certs/{{ ansible_hostname }}.key"
        common_name: "{{ ansible_hostname }}"
        subject_alt_name: 'DNS:{{ ansible_fqdn }},IP:{{ inventory_hostname }}'

    - name: "Sign the CSR file with my ower authorithy"
      openssl_certificate:
        path: "/etc/metricbeat/certs/{{ ansible_hostname }}.crt"
        ownca_privatekey_path: "/etc/metricbeat/certs/rootCA.key"
        ownca_path: "/etc/metricbeat/certs/rootCA.crt"
        csr_path: "/etc/metricbeat/certs/{{ ansible_hostname }}.csr"
        provider: ownca
  when: __key_file.stat.islnk is not defined

# Waiting that Kibana status was ok
- name: Pause play ( Max 2 minutes ) until Kibana status is Green
  uri:
    url: https://{{ groups['kibana'][0] }}:{{ kibana_port}}/api/status?pretty
    method: GET
    user: 'elastic'
    password: "{{ elk_password }}"
    return_content: yes
    status_code: 200,-1
    force_basic_auth: yes
    body_format: json
    validate_certs: no
  register: _result
  until: "'Failed' not in _result.msg and 'green' in  _result.content"
  retries: 12 # 12 * 10 seconds = 2minutes
  delay: 10 # Every 10 seconds

- name: Load Dashboard and indexes 
  command: /usr/bin/metricbeat setup
  run_once: true

- name: Enable metricbeat.service
  systemd:
    name: metricbeat.service
    enabled: yes

- name: Start metricbeat.service
  systemd: 
    name: metricbeat.service
    state: restarted
